* Consider ways of separating JSON read/write functions from data-centric TagMap container.
* Document all classes, functions, fields, etc.
* Update root CMakeLists to build only required configuration of wxWidgets.
* Decide how consistently it's appropriate to say "registered" in accessors for registered tags.
* Where appropriate, consider replacing std::pair with explicit struct.
* Where appropriate, consider replacing bool with explicit enum.
* Use std::map::max_size() in relevant functions that check capacity.
* Define JSON labels ("id", "tag", etc.) as constants rather than using them as magic strings.
* Add appropriate licenses.
* Make sure we add functions setting and retrieving TagProperties.
* Revisit the confusing matter of how to link libraries for wxWidgets. I don't think that including
  them one-by-one is the intended use, but I struggled for hours in vain to find the "right" way.
* Add coverage checks.
* Update addFile() to validate FileProperties for registered tags... Or else, modify the interface.
* Implement a setTags() function that can set multiple tags on a file at once?
* Handle exclusive settings radio-button style where setting one clears another?
* Perhaps I should automatically consider a tag UNCOMMITTED when missing from a file.
* Resolve Catch2 debug issue (PDB warnings upon build).
* Add ability to drag tags around.
* Figure out how to configure startup project via CMake such that I can simply F5 from VS to build
  and execute RagTag.exe without needing to modify solution settings.
